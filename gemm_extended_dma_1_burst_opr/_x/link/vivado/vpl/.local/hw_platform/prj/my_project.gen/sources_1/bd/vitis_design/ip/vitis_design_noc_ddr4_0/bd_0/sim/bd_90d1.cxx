//File Automatically generated by SystemC Netlister Time
#include "bd_90d1.h"
bd_90d1::bd_90d1(const sc_module_name& module_name,xsc::common_cpp::properties& properties) : bd_90d1_sci(module_name) 
,CH0_DDR4_0_act_n("CH0_DDR4_0_act_n")
,CH0_DDR4_0_adr("CH0_DDR4_0_adr")
,CH0_DDR4_0_ba("CH0_DDR4_0_ba")
,CH0_DDR4_0_bg("CH0_DDR4_0_bg")
,CH0_DDR4_0_ck_c("CH0_DDR4_0_ck_c")
,CH0_DDR4_0_ck_t("CH0_DDR4_0_ck_t")
,CH0_DDR4_0_cke("CH0_DDR4_0_cke")
,CH0_DDR4_0_cs_n("CH0_DDR4_0_cs_n")
,CH0_DDR4_0_dm_n("CH0_DDR4_0_dm_n")
,CH0_DDR4_0_dq("CH0_DDR4_0_dq")
,CH0_DDR4_0_dqs_c("CH0_DDR4_0_dqs_c")
,CH0_DDR4_0_dqs_t("CH0_DDR4_0_dqs_t")
,CH0_DDR4_0_odt("CH0_DDR4_0_odt")
,CH0_DDR4_0_reset_n("CH0_DDR4_0_reset_n")
,S00_INI_internoc("S00_INI_internoc")
,S01_INI_internoc("S01_INI_internoc")
,S02_INI_internoc("S02_INI_internoc")
,S03_INI_internoc("S03_INI_internoc")
,sys_clk0_clk_n("sys_clk0_clk_n")
,sys_clk0_clk_p("sys_clk0_clk_p")
{
	//Instance Instantiation
	MC0_ddrc=new bd_90d1_MC0_ddrc_0("MC0_ddrc");
	
	//Signal Connections
	MC0_ddrc->ch0_ddr4_dm_dbi_n(CH0_DDR4_0_dm_n);
	MC0_ddrc->ch0_ddr4_dq(CH0_DDR4_0_dq);
	MC0_ddrc->ch0_ddr4_dqs_c(CH0_DDR4_0_dqs_c);
	MC0_ddrc->ch0_ddr4_dqs_t(CH0_DDR4_0_dqs_t);
	MC0_ddrc->dmc2noc_credit_rdy_0(MC0_ddrc_dmc2noc_credit_rdy_0_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_1(MC0_ddrc_dmc2noc_credit_rdy_1_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_2(MC0_ddrc_dmc2noc_credit_rdy_2_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_3(MC0_ddrc_dmc2noc_credit_rdy_3_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_0(MC0_ddrc_dmc2noc_credit_rtn_0_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_1(MC0_ddrc_dmc2noc_credit_rtn_1_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_2(MC0_ddrc_dmc2noc_credit_rtn_2_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_3(MC0_ddrc_dmc2noc_credit_rtn_3_driver_signal);
	MC0_ddrc->dmc2noc_data_out_0(MC0_ddrc_dmc2noc_data_out_0_driver_signal);
	MC0_ddrc->dmc2noc_data_out_1(MC0_ddrc_dmc2noc_data_out_1_driver_signal);
	MC0_ddrc->dmc2noc_data_out_2(MC0_ddrc_dmc2noc_data_out_2_driver_signal);
	MC0_ddrc->dmc2noc_data_out_3(MC0_ddrc_dmc2noc_data_out_3_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_0(MC0_ddrc_dmc2noc_valid_out_0_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_1(MC0_ddrc_dmc2noc_valid_out_1_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_2(MC0_ddrc_dmc2noc_valid_out_2_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_3(MC0_ddrc_dmc2noc_valid_out_3_driver_signal);
	MC0_ddrc->from_noc_0(MC0_ddrc_from_noc_0_stub_signal);
	MC0_ddrc->from_noc_1(MC0_ddrc_from_noc_1_stub_signal);
	MC0_ddrc->from_noc_2(MC0_ddrc_from_noc_2_stub_signal);
	MC0_ddrc->from_noc_3(MC0_ddrc_from_noc_3_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_0(MC0_ddrc_noc2dmc_credit_rdy_0_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_1(MC0_ddrc_noc2dmc_credit_rdy_1_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_2(MC0_ddrc_noc2dmc_credit_rdy_2_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_3(MC0_ddrc_noc2dmc_credit_rdy_3_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_0(MC0_ddrc_noc2dmc_credit_rtn_0_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_1(MC0_ddrc_noc2dmc_credit_rtn_1_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_2(MC0_ddrc_noc2dmc_credit_rtn_2_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_3(MC0_ddrc_noc2dmc_credit_rtn_3_stub_signal);
	MC0_ddrc->noc2dmc_data_in_0(MC0_ddrc_noc2dmc_data_in_0_stub_signal);
	MC0_ddrc->noc2dmc_data_in_1(MC0_ddrc_noc2dmc_data_in_1_stub_signal);
	MC0_ddrc->noc2dmc_data_in_2(MC0_ddrc_noc2dmc_data_in_2_stub_signal);
	MC0_ddrc->noc2dmc_data_in_3(MC0_ddrc_noc2dmc_data_in_3_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_0(MC0_ddrc_noc2dmc_valid_in_0_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_1(MC0_ddrc_noc2dmc_valid_in_1_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_2(MC0_ddrc_noc2dmc_valid_in_2_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_3(MC0_ddrc_noc2dmc_valid_in_3_stub_signal);
	MC0_ddrc->sys_clk_n(MC0_ddrc_sys_clk_n_connect_signal);
	MC0_ddrc->sys_clk_p(MC0_ddrc_sys_clk_p_connect_signal);
	MC0_ddrc->ch0_ddr4_act_n(MC0_ddrc_ch0_ddr4_act_n_driver_signal);
	MC0_ddrc->ch0_ddr4_adr(CH0_DDR4_0_adr);
	MC0_ddrc->ch0_ddr4_ba(CH0_DDR4_0_ba);
	MC0_ddrc->ch0_ddr4_bg(CH0_DDR4_0_bg);
	MC0_ddrc->ch0_ddr4_ck_c(CH0_DDR4_0_ck_c);
	MC0_ddrc->ch0_ddr4_ck_t(CH0_DDR4_0_ck_t);
	MC0_ddrc->ch0_ddr4_cke(CH0_DDR4_0_cke);
	MC0_ddrc->ch0_ddr4_cs_n(CH0_DDR4_0_cs_n);
	MC0_ddrc->ch0_ddr4_odt(CH0_DDR4_0_odt);
	MC0_ddrc->ch0_ddr4_reset_n(MC0_ddrc_ch0_ddr4_reset_n_driver_signal);
	
	
	
	//Exported socket connection
	//Add TLM Parameters
	
	//Thread Initialization
	//Add TLM Parameters
	SC_METHOD(MC0_ddrc_sys_clk_n_DRIVER_METHOD);
	sensitive<<sys_clk0_clk_n.value_changed();
	
	SC_METHOD(MC0_ddrc_sys_clk_p_DRIVER_METHOD);
	sensitive<<sys_clk0_clk_p.value_changed();
	
	SC_METHOD(bd_90d1_CH0_DDR4_0_act_n_EXT_METHOD);
	sensitive<<MC0_ddrc_ch0_ddr4_act_n_driver_signal;
	
	SC_METHOD(bd_90d1_CH0_DDR4_0_reset_n_EXT_METHOD);
	sensitive<<MC0_ddrc_ch0_ddr4_reset_n_driver_signal;
	
	
	//Socket Connection
	xsc::utils::xsc_sim_manager::addInstance("bd_90d1", this);
}
void bd_90d1::MC0_ddrc_sys_clk_n_DRIVER_METHOD() {
  bool value;
  value=((sys_clk0_clk_n.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  MC0_ddrc_sys_clk_n_connect_signal.write(value);
}
void bd_90d1::MC0_ddrc_sys_clk_p_DRIVER_METHOD() {
  bool value;
  value=((sys_clk0_clk_p.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  MC0_ddrc_sys_clk_p_connect_signal.write(value);
}
void bd_90d1::bd_90d1_CH0_DDR4_0_act_n_EXT_METHOD() {
  sc_bv<1> value;
  value.set_bit(0,((MC0_ddrc_ch0_ddr4_act_n_driver_signal.read())?sc_dt::sc_logic_value_t::Log_1:sc_dt::sc_logic_value_t::Log_0));
  CH0_DDR4_0_act_n.write(value);
}
void bd_90d1::bd_90d1_CH0_DDR4_0_reset_n_EXT_METHOD() {
  sc_bv<1> value;
  value.set_bit(0,((MC0_ddrc_ch0_ddr4_reset_n_driver_signal.read())?sc_dt::sc_logic_value_t::Log_1:sc_dt::sc_logic_value_t::Log_0));
  CH0_DDR4_0_reset_n.write(value);
}
bd_90d1::~bd_90d1()
{
	if(MC0_ddrc) delete MC0_ddrc;
}
