//File Automatically generated by SystemC Netlister Time
#include "bd_90d1.h"
bd_90d1::bd_90d1(const sc_module_name& module_name,xsc::common_cpp::properties& properties) : bd_90d1_sci(module_name) 
,CH0_DDR4_0_act_n("CH0_DDR4_0_act_n")
,CH0_DDR4_0_adr("CH0_DDR4_0_adr")
,CH0_DDR4_0_ba("CH0_DDR4_0_ba")
,CH0_DDR4_0_bg("CH0_DDR4_0_bg")
,CH0_DDR4_0_ck_c("CH0_DDR4_0_ck_c")
,CH0_DDR4_0_ck_t("CH0_DDR4_0_ck_t")
,CH0_DDR4_0_cke("CH0_DDR4_0_cke")
,CH0_DDR4_0_cs_n("CH0_DDR4_0_cs_n")
,CH0_DDR4_0_dm_n("CH0_DDR4_0_dm_n")
,CH0_DDR4_0_dq("CH0_DDR4_0_dq")
,CH0_DDR4_0_dqs_c("CH0_DDR4_0_dqs_c")
,CH0_DDR4_0_dqs_t("CH0_DDR4_0_dqs_t")
,CH0_DDR4_0_odt("CH0_DDR4_0_odt")
,CH0_DDR4_0_reset_n("CH0_DDR4_0_reset_n")
,S00_INI_internoc("S00_INI_internoc")
,S01_INI_internoc("S01_INI_internoc")
,S02_INI_internoc("S02_INI_internoc")
,S03_INI_internoc("S03_INI_internoc")
,aclk0("aclk0")
,sys_clk0_clk_n("sys_clk0_clk_n")
,sys_clk0_clk_p("sys_clk0_clk_p")
{
	//Instance Instantiation
	MC0_ddrc=new bd_90d1_MC0_ddrc_0("MC0_ddrc");
	S00_AXI_nmu=new bd_90d1_S00_AXI_nmu_0("S00_AXI_nmu");
	S01_AXI_nmu=new bd_90d1_S01_AXI_nmu_0("S01_AXI_nmu");
	S02_AXI_nmu=new bd_90d1_S02_AXI_nmu_0("S02_AXI_nmu");
	const_0=new bd_90d1_const_0_0("const_0");
	
	//Signal Connections
	MC0_ddrc->ch0_ddr4_dm_dbi_n(CH0_DDR4_0_dm_n);
	MC0_ddrc->ch0_ddr4_dq(CH0_DDR4_0_dq);
	MC0_ddrc->ch0_ddr4_dqs_c(CH0_DDR4_0_dqs_c);
	MC0_ddrc->ch0_ddr4_dqs_t(CH0_DDR4_0_dqs_t);
	MC0_ddrc->dmc2noc_credit_rdy_0(MC0_ddrc_dmc2noc_credit_rdy_0_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_1(MC0_ddrc_dmc2noc_credit_rdy_1_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_2(MC0_ddrc_dmc2noc_credit_rdy_2_driver_signal);
	MC0_ddrc->dmc2noc_credit_rdy_3(MC0_ddrc_dmc2noc_credit_rdy_3_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_0(MC0_ddrc_dmc2noc_credit_rtn_0_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_1(MC0_ddrc_dmc2noc_credit_rtn_1_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_2(MC0_ddrc_dmc2noc_credit_rtn_2_driver_signal);
	MC0_ddrc->dmc2noc_credit_rtn_3(MC0_ddrc_dmc2noc_credit_rtn_3_driver_signal);
	MC0_ddrc->dmc2noc_data_out_0(MC0_ddrc_dmc2noc_data_out_0_driver_signal);
	MC0_ddrc->dmc2noc_data_out_1(MC0_ddrc_dmc2noc_data_out_1_driver_signal);
	MC0_ddrc->dmc2noc_data_out_2(MC0_ddrc_dmc2noc_data_out_2_driver_signal);
	MC0_ddrc->dmc2noc_data_out_3(MC0_ddrc_dmc2noc_data_out_3_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_0(MC0_ddrc_dmc2noc_valid_out_0_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_1(MC0_ddrc_dmc2noc_valid_out_1_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_2(MC0_ddrc_dmc2noc_valid_out_2_driver_signal);
	MC0_ddrc->dmc2noc_valid_out_3(MC0_ddrc_dmc2noc_valid_out_3_driver_signal);
	MC0_ddrc->from_noc_0(MC0_ddrc_from_noc_0_stub_signal);
	MC0_ddrc->from_noc_1(MC0_ddrc_from_noc_1_stub_signal);
	MC0_ddrc->from_noc_2(MC0_ddrc_from_noc_2_stub_signal);
	MC0_ddrc->from_noc_3(MC0_ddrc_from_noc_3_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_0(MC0_ddrc_noc2dmc_credit_rdy_0_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_1(MC0_ddrc_noc2dmc_credit_rdy_1_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_2(MC0_ddrc_noc2dmc_credit_rdy_2_stub_signal);
	MC0_ddrc->noc2dmc_credit_rdy_3(MC0_ddrc_noc2dmc_credit_rdy_3_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_0(MC0_ddrc_noc2dmc_credit_rtn_0_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_1(MC0_ddrc_noc2dmc_credit_rtn_1_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_2(MC0_ddrc_noc2dmc_credit_rtn_2_stub_signal);
	MC0_ddrc->noc2dmc_credit_rtn_3(MC0_ddrc_noc2dmc_credit_rtn_3_stub_signal);
	MC0_ddrc->noc2dmc_data_in_0(MC0_ddrc_noc2dmc_data_in_0_stub_signal);
	MC0_ddrc->noc2dmc_data_in_1(MC0_ddrc_noc2dmc_data_in_1_stub_signal);
	MC0_ddrc->noc2dmc_data_in_2(MC0_ddrc_noc2dmc_data_in_2_stub_signal);
	MC0_ddrc->noc2dmc_data_in_3(MC0_ddrc_noc2dmc_data_in_3_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_0(MC0_ddrc_noc2dmc_valid_in_0_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_1(MC0_ddrc_noc2dmc_valid_in_1_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_2(MC0_ddrc_noc2dmc_valid_in_2_stub_signal);
	MC0_ddrc->noc2dmc_valid_in_3(MC0_ddrc_noc2dmc_valid_in_3_stub_signal);
	MC0_ddrc->sys_clk_n(MC0_ddrc_sys_clk_n_connect_signal);
	MC0_ddrc->sys_clk_p(MC0_ddrc_sys_clk_p_connect_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARADDR(S00_AXI_nmu_IF_NOC_AXI_ARADDR_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARBURST(S00_AXI_nmu_IF_NOC_AXI_ARBURST_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARCACHE(S00_AXI_nmu_IF_NOC_AXI_ARCACHE_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARID(S00_AXI_nmu_IF_NOC_AXI_ARID_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARLEN(S00_AXI_nmu_IF_NOC_AXI_ARLEN_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARLOCK(S00_AXI_nmu_IF_NOC_AXI_ARLOCK_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARPROT(S00_AXI_nmu_IF_NOC_AXI_ARPROT_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARQOS(S00_AXI_nmu_IF_NOC_AXI_ARQOS_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARREADY(S00_AXI_nmu_IF_NOC_AXI_ARREADY_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARREGION(S00_AXI_nmu_IF_NOC_AXI_ARREGION_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARSIZE(S00_AXI_nmu_IF_NOC_AXI_ARSIZE_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_ARVALID(S00_AXI_nmu_IF_NOC_AXI_ARVALID_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWADDR(S00_AXI_nmu_IF_NOC_AXI_AWADDR_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWBURST(S00_AXI_nmu_IF_NOC_AXI_AWBURST_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWCACHE(S00_AXI_nmu_IF_NOC_AXI_AWCACHE_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWID(S00_AXI_nmu_IF_NOC_AXI_AWID_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWLEN(S00_AXI_nmu_IF_NOC_AXI_AWLEN_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWLOCK(S00_AXI_nmu_IF_NOC_AXI_AWLOCK_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWPROT(S00_AXI_nmu_IF_NOC_AXI_AWPROT_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWQOS(S00_AXI_nmu_IF_NOC_AXI_AWQOS_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWREADY(S00_AXI_nmu_IF_NOC_AXI_AWREADY_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWREGION(S00_AXI_nmu_IF_NOC_AXI_AWREGION_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWSIZE(S00_AXI_nmu_IF_NOC_AXI_AWSIZE_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_AWVALID(S00_AXI_nmu_IF_NOC_AXI_AWVALID_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_BID(S00_AXI_nmu_IF_NOC_AXI_BID_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_BREADY(S00_AXI_nmu_IF_NOC_AXI_BREADY_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_BRESP(S00_AXI_nmu_IF_NOC_AXI_BRESP_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_BVALID(S00_AXI_nmu_IF_NOC_AXI_BVALID_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_RDATA(S00_AXI_nmu_IF_NOC_AXI_RDATA_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_RID(S00_AXI_nmu_IF_NOC_AXI_RID_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_RLAST(S00_AXI_nmu_IF_NOC_AXI_RLAST_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_RREADY(S00_AXI_nmu_IF_NOC_AXI_RREADY_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_RRESP(S00_AXI_nmu_IF_NOC_AXI_RRESP_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_RVALID(S00_AXI_nmu_IF_NOC_AXI_RVALID_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_WDATA(S00_AXI_nmu_IF_NOC_AXI_WDATA_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_WLAST(S00_AXI_nmu_IF_NOC_AXI_WLAST_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_WREADY(S00_AXI_nmu_IF_NOC_AXI_WREADY_driver_signal);
	S00_AXI_nmu->IF_NOC_AXI_WSTRB(S00_AXI_nmu_IF_NOC_AXI_WSTRB_stub_signal);
	S00_AXI_nmu->IF_NOC_AXI_WVALID(S00_AXI_nmu_IF_NOC_AXI_WVALID_stub_signal);
	S00_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RDY(S00_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RDY_stub_signal);
	S00_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RETURN(S00_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RETURN_driver_signal);
	S00_AXI_nmu->IF_NOC_NPP_IN_NOC_FLIT(S00_AXI_nmu_IF_NOC_NPP_IN_NOC_FLIT_stub_signal);
	S00_AXI_nmu->IF_NOC_NPP_IN_NOC_VALID(S00_AXI_nmu_IF_NOC_NPP_IN_NOC_VALID_stub_signal);
	S00_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RDY(S00_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RDY_driver_signal);
	S00_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RETURN(S00_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RETURN_stub_signal);
	S00_AXI_nmu->IF_NOC_NPP_OUT_NOC_FLIT(S00_AXI_nmu_IF_NOC_NPP_OUT_NOC_FLIT_driver_signal);
	S00_AXI_nmu->IF_NOC_NPP_OUT_NOC_VALID(S00_AXI_nmu_IF_NOC_NPP_OUT_NOC_VALID_driver_signal);
	S00_AXI_nmu->NMU(S00_AXI_nmu_NMU_driver_signal);
	S00_AXI_nmu->NMU_RD_DEST_MODE(S00_AXI_nmu_NMU_RD_DEST_MODE_connect_signal);
	const_0->dout(S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal);
	S00_AXI_nmu->NMU_RD_USR_DST(S00_AXI_nmu_NMU_RD_USR_DST_stub_signal);
	S00_AXI_nmu->NMU_WR_DEST_MODE(S00_AXI_nmu_NMU_WR_DEST_MODE_connect_signal);
	S00_AXI_nmu->NMU_WR_USR_DST(S00_AXI_nmu_NMU_WR_USR_DST_stub_signal);
	S00_AXI_nmu->aclk(aclk0);
	S01_AXI_nmu->IF_NOC_AXI_ARADDR(S01_AXI_nmu_IF_NOC_AXI_ARADDR_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARBURST(S01_AXI_nmu_IF_NOC_AXI_ARBURST_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARCACHE(S01_AXI_nmu_IF_NOC_AXI_ARCACHE_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARID(S01_AXI_nmu_IF_NOC_AXI_ARID_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARLEN(S01_AXI_nmu_IF_NOC_AXI_ARLEN_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARLOCK(S01_AXI_nmu_IF_NOC_AXI_ARLOCK_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARPROT(S01_AXI_nmu_IF_NOC_AXI_ARPROT_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARQOS(S01_AXI_nmu_IF_NOC_AXI_ARQOS_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARREADY(S01_AXI_nmu_IF_NOC_AXI_ARREADY_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARREGION(S01_AXI_nmu_IF_NOC_AXI_ARREGION_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARSIZE(S01_AXI_nmu_IF_NOC_AXI_ARSIZE_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_ARVALID(S01_AXI_nmu_IF_NOC_AXI_ARVALID_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWADDR(S01_AXI_nmu_IF_NOC_AXI_AWADDR_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWBURST(S01_AXI_nmu_IF_NOC_AXI_AWBURST_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWCACHE(S01_AXI_nmu_IF_NOC_AXI_AWCACHE_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWID(S01_AXI_nmu_IF_NOC_AXI_AWID_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWLEN(S01_AXI_nmu_IF_NOC_AXI_AWLEN_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWLOCK(S01_AXI_nmu_IF_NOC_AXI_AWLOCK_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWPROT(S01_AXI_nmu_IF_NOC_AXI_AWPROT_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWQOS(S01_AXI_nmu_IF_NOC_AXI_AWQOS_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWREADY(S01_AXI_nmu_IF_NOC_AXI_AWREADY_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWREGION(S01_AXI_nmu_IF_NOC_AXI_AWREGION_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWSIZE(S01_AXI_nmu_IF_NOC_AXI_AWSIZE_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_AWVALID(S01_AXI_nmu_IF_NOC_AXI_AWVALID_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_BID(S01_AXI_nmu_IF_NOC_AXI_BID_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_BREADY(S01_AXI_nmu_IF_NOC_AXI_BREADY_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_BRESP(S01_AXI_nmu_IF_NOC_AXI_BRESP_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_BVALID(S01_AXI_nmu_IF_NOC_AXI_BVALID_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_RDATA(S01_AXI_nmu_IF_NOC_AXI_RDATA_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_RID(S01_AXI_nmu_IF_NOC_AXI_RID_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_RLAST(S01_AXI_nmu_IF_NOC_AXI_RLAST_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_RREADY(S01_AXI_nmu_IF_NOC_AXI_RREADY_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_RRESP(S01_AXI_nmu_IF_NOC_AXI_RRESP_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_RVALID(S01_AXI_nmu_IF_NOC_AXI_RVALID_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_WDATA(S01_AXI_nmu_IF_NOC_AXI_WDATA_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_WLAST(S01_AXI_nmu_IF_NOC_AXI_WLAST_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_WREADY(S01_AXI_nmu_IF_NOC_AXI_WREADY_driver_signal);
	S01_AXI_nmu->IF_NOC_AXI_WSTRB(S01_AXI_nmu_IF_NOC_AXI_WSTRB_stub_signal);
	S01_AXI_nmu->IF_NOC_AXI_WVALID(S01_AXI_nmu_IF_NOC_AXI_WVALID_stub_signal);
	S01_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RDY(S01_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RDY_stub_signal);
	S01_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RETURN(S01_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RETURN_driver_signal);
	S01_AXI_nmu->IF_NOC_NPP_IN_NOC_FLIT(S01_AXI_nmu_IF_NOC_NPP_IN_NOC_FLIT_stub_signal);
	S01_AXI_nmu->IF_NOC_NPP_IN_NOC_VALID(S01_AXI_nmu_IF_NOC_NPP_IN_NOC_VALID_stub_signal);
	S01_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RDY(S01_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RDY_driver_signal);
	S01_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RETURN(S01_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RETURN_stub_signal);
	S01_AXI_nmu->IF_NOC_NPP_OUT_NOC_FLIT(S01_AXI_nmu_IF_NOC_NPP_OUT_NOC_FLIT_driver_signal);
	S01_AXI_nmu->IF_NOC_NPP_OUT_NOC_VALID(S01_AXI_nmu_IF_NOC_NPP_OUT_NOC_VALID_driver_signal);
	S01_AXI_nmu->NMU(S01_AXI_nmu_NMU_driver_signal);
	S01_AXI_nmu->NMU_RD_DEST_MODE(S01_AXI_nmu_NMU_RD_DEST_MODE_connect_signal);
	S01_AXI_nmu->NMU_RD_USR_DST(S01_AXI_nmu_NMU_RD_USR_DST_stub_signal);
	S01_AXI_nmu->NMU_WR_DEST_MODE(S01_AXI_nmu_NMU_WR_DEST_MODE_connect_signal);
	S01_AXI_nmu->NMU_WR_USR_DST(S01_AXI_nmu_NMU_WR_USR_DST_stub_signal);
	S01_AXI_nmu->aclk(aclk0);
	S02_AXI_nmu->IF_NOC_AXI_ARADDR(S02_AXI_nmu_IF_NOC_AXI_ARADDR_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARBURST(S02_AXI_nmu_IF_NOC_AXI_ARBURST_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARCACHE(S02_AXI_nmu_IF_NOC_AXI_ARCACHE_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARID(S02_AXI_nmu_IF_NOC_AXI_ARID_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARLEN(S02_AXI_nmu_IF_NOC_AXI_ARLEN_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARLOCK(S02_AXI_nmu_IF_NOC_AXI_ARLOCK_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARPROT(S02_AXI_nmu_IF_NOC_AXI_ARPROT_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARQOS(S02_AXI_nmu_IF_NOC_AXI_ARQOS_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARREADY(S02_AXI_nmu_IF_NOC_AXI_ARREADY_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARREGION(S02_AXI_nmu_IF_NOC_AXI_ARREGION_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARSIZE(S02_AXI_nmu_IF_NOC_AXI_ARSIZE_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_ARVALID(S02_AXI_nmu_IF_NOC_AXI_ARVALID_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWADDR(S02_AXI_nmu_IF_NOC_AXI_AWADDR_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWBURST(S02_AXI_nmu_IF_NOC_AXI_AWBURST_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWCACHE(S02_AXI_nmu_IF_NOC_AXI_AWCACHE_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWID(S02_AXI_nmu_IF_NOC_AXI_AWID_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWLEN(S02_AXI_nmu_IF_NOC_AXI_AWLEN_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWLOCK(S02_AXI_nmu_IF_NOC_AXI_AWLOCK_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWPROT(S02_AXI_nmu_IF_NOC_AXI_AWPROT_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWQOS(S02_AXI_nmu_IF_NOC_AXI_AWQOS_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWREADY(S02_AXI_nmu_IF_NOC_AXI_AWREADY_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWREGION(S02_AXI_nmu_IF_NOC_AXI_AWREGION_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWSIZE(S02_AXI_nmu_IF_NOC_AXI_AWSIZE_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_AWVALID(S02_AXI_nmu_IF_NOC_AXI_AWVALID_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_BID(S02_AXI_nmu_IF_NOC_AXI_BID_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_BREADY(S02_AXI_nmu_IF_NOC_AXI_BREADY_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_BRESP(S02_AXI_nmu_IF_NOC_AXI_BRESP_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_BVALID(S02_AXI_nmu_IF_NOC_AXI_BVALID_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_RDATA(S02_AXI_nmu_IF_NOC_AXI_RDATA_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_RID(S02_AXI_nmu_IF_NOC_AXI_RID_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_RLAST(S02_AXI_nmu_IF_NOC_AXI_RLAST_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_RREADY(S02_AXI_nmu_IF_NOC_AXI_RREADY_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_RRESP(S02_AXI_nmu_IF_NOC_AXI_RRESP_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_RVALID(S02_AXI_nmu_IF_NOC_AXI_RVALID_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_WDATA(S02_AXI_nmu_IF_NOC_AXI_WDATA_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_WLAST(S02_AXI_nmu_IF_NOC_AXI_WLAST_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_WREADY(S02_AXI_nmu_IF_NOC_AXI_WREADY_driver_signal);
	S02_AXI_nmu->IF_NOC_AXI_WSTRB(S02_AXI_nmu_IF_NOC_AXI_WSTRB_stub_signal);
	S02_AXI_nmu->IF_NOC_AXI_WVALID(S02_AXI_nmu_IF_NOC_AXI_WVALID_stub_signal);
	S02_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RDY(S02_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RDY_stub_signal);
	S02_AXI_nmu->IF_NOC_NPP_IN_NOC_CREDIT_RETURN(S02_AXI_nmu_IF_NOC_NPP_IN_NOC_CREDIT_RETURN_driver_signal);
	S02_AXI_nmu->IF_NOC_NPP_IN_NOC_FLIT(S02_AXI_nmu_IF_NOC_NPP_IN_NOC_FLIT_stub_signal);
	S02_AXI_nmu->IF_NOC_NPP_IN_NOC_VALID(S02_AXI_nmu_IF_NOC_NPP_IN_NOC_VALID_stub_signal);
	S02_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RDY(S02_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RDY_driver_signal);
	S02_AXI_nmu->IF_NOC_NPP_OUT_NOC_CREDIT_RETURN(S02_AXI_nmu_IF_NOC_NPP_OUT_NOC_CREDIT_RETURN_stub_signal);
	S02_AXI_nmu->IF_NOC_NPP_OUT_NOC_FLIT(S02_AXI_nmu_IF_NOC_NPP_OUT_NOC_FLIT_driver_signal);
	S02_AXI_nmu->IF_NOC_NPP_OUT_NOC_VALID(S02_AXI_nmu_IF_NOC_NPP_OUT_NOC_VALID_driver_signal);
	S02_AXI_nmu->NMU(S02_AXI_nmu_NMU_driver_signal);
	S02_AXI_nmu->NMU_RD_DEST_MODE(S02_AXI_nmu_NMU_RD_DEST_MODE_connect_signal);
	S02_AXI_nmu->NMU_RD_USR_DST(S02_AXI_nmu_NMU_RD_USR_DST_stub_signal);
	S02_AXI_nmu->NMU_WR_DEST_MODE(S02_AXI_nmu_NMU_WR_DEST_MODE_connect_signal);
	S02_AXI_nmu->NMU_WR_USR_DST(S02_AXI_nmu_NMU_WR_USR_DST_stub_signal);
	S02_AXI_nmu->aclk(aclk0);
	MC0_ddrc->ch0_ddr4_act_n(MC0_ddrc_ch0_ddr4_act_n_driver_signal);
	MC0_ddrc->ch0_ddr4_adr(CH0_DDR4_0_adr);
	MC0_ddrc->ch0_ddr4_ba(CH0_DDR4_0_ba);
	MC0_ddrc->ch0_ddr4_bg(CH0_DDR4_0_bg);
	MC0_ddrc->ch0_ddr4_ck_c(CH0_DDR4_0_ck_c);
	MC0_ddrc->ch0_ddr4_ck_t(CH0_DDR4_0_ck_t);
	MC0_ddrc->ch0_ddr4_cke(CH0_DDR4_0_cke);
	MC0_ddrc->ch0_ddr4_cs_n(CH0_DDR4_0_cs_n);
	MC0_ddrc->ch0_ddr4_odt(CH0_DDR4_0_odt);
	MC0_ddrc->ch0_ddr4_reset_n(MC0_ddrc_ch0_ddr4_reset_n_driver_signal);
	
	
	
	//Exported socket connection
	S00_AXI_tlm_aximm_read_socket->bind(*(S00_AXI_nmu->SAXI4_rd_socket));
	S00_AXI_tlm_aximm_write_socket->bind(*(S00_AXI_nmu->SAXI4_wr_socket));
	
	S01_AXI_tlm_aximm_read_socket->bind(*(S01_AXI_nmu->SAXI4_rd_socket));
	S01_AXI_tlm_aximm_write_socket->bind(*(S01_AXI_nmu->SAXI4_wr_socket));
	
	S02_AXI_tlm_aximm_read_socket->bind(*(S02_AXI_nmu->SAXI4_rd_socket));
	S02_AXI_tlm_aximm_write_socket->bind(*(S02_AXI_nmu->SAXI4_wr_socket));
	
	xsc::utils::xsc_sim_manager::addInstanceParameter("bd_90d1_S00_AXI_nmu_0","SAXI4_TLM_MODE",1);
	
	xsc::utils::xsc_sim_manager::addInstanceParameter("bd_90d1_S01_AXI_nmu_0","SAXI4_TLM_MODE",1);
	
	xsc::utils::xsc_sim_manager::addInstanceParameter("bd_90d1_S02_AXI_nmu_0","SAXI4_TLM_MODE",1);
	
	//Add TLM Parameters
	
	//Thread Initialization
	//Add TLM Parameters
	SC_METHOD(MC0_ddrc_sys_clk_n_DRIVER_METHOD);
	sensitive<<sys_clk0_clk_n.value_changed();
	
	SC_METHOD(MC0_ddrc_sys_clk_p_DRIVER_METHOD);
	sensitive<<sys_clk0_clk_p.value_changed();
	
	SC_METHOD(S00_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(S00_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(S01_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(S01_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(S02_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(S02_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD);
	sensitive<<S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal;
	
	SC_METHOD(bd_90d1_CH0_DDR4_0_act_n_EXT_METHOD);
	sensitive<<MC0_ddrc_ch0_ddr4_act_n_driver_signal;
	
	SC_METHOD(bd_90d1_CH0_DDR4_0_reset_n_EXT_METHOD);
	sensitive<<MC0_ddrc_ch0_ddr4_reset_n_driver_signal;
	
	
	//Socket Connection
	xsc::utils::xsc_sim_manager::addInstance("bd_90d1", this);
}
void bd_90d1::MC0_ddrc_sys_clk_n_DRIVER_METHOD() {
  bool value;
  value=((sys_clk0_clk_n.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  MC0_ddrc_sys_clk_n_connect_signal.write(value);
}
void bd_90d1::MC0_ddrc_sys_clk_p_DRIVER_METHOD() {
  bool value;
  value=((sys_clk0_clk_p.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  MC0_ddrc_sys_clk_p_connect_signal.write(value);
}
void bd_90d1::S00_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S00_AXI_nmu_NMU_RD_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::S00_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S00_AXI_nmu_NMU_WR_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::S01_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S01_AXI_nmu_NMU_RD_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::S01_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S01_AXI_nmu_NMU_WR_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::S02_AXI_nmu_NMU_RD_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S02_AXI_nmu_NMU_RD_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::S02_AXI_nmu_NMU_WR_DEST_MODE_DRIVER_METHOD() {
  bool value;
 value=((S00_AXI_nmu_NMU_RD_DEST_MODE_driver_signal.read().get_bit(0)==sc_dt::sc_logic_value_t::Log_1)?true:false);
  S02_AXI_nmu_NMU_WR_DEST_MODE_connect_signal.write(value);
}
void bd_90d1::bd_90d1_CH0_DDR4_0_act_n_EXT_METHOD() {
  sc_bv<1> value;
  value.set_bit(0,((MC0_ddrc_ch0_ddr4_act_n_driver_signal.read())?sc_dt::sc_logic_value_t::Log_1:sc_dt::sc_logic_value_t::Log_0));
  CH0_DDR4_0_act_n.write(value);
}
void bd_90d1::bd_90d1_CH0_DDR4_0_reset_n_EXT_METHOD() {
  sc_bv<1> value;
  value.set_bit(0,((MC0_ddrc_ch0_ddr4_reset_n_driver_signal.read())?sc_dt::sc_logic_value_t::Log_1:sc_dt::sc_logic_value_t::Log_0));
  CH0_DDR4_0_reset_n.write(value);
}
bd_90d1::~bd_90d1()
{
	if(MC0_ddrc) delete MC0_ddrc;
	if(S00_AXI_nmu) delete S00_AXI_nmu;
	if(S01_AXI_nmu) delete S01_AXI_nmu;
	if(S02_AXI_nmu) delete S02_AXI_nmu;
	if(const_0) delete const_0;
}
